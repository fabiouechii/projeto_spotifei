/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import controller.ControllerPlaylist;
import model.Playlist;
import model.Musica;
import model.Usuario;
import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.SwingUtilities;
import view.LoginFrame;
import view.MenuFrame;

/**
 *
 * @author fabio
 */
public class PlaylistFrame extends javax.swing.JFrame {
    
    private ControllerPlaylist controller;
    private Usuario usuarioLogado;
    
    public PlaylistFrame(Usuario usuario) {
        initComponents();
        this.usuarioLogado = usuario;
        this.controller = new ControllerPlaylist(this, this.usuarioLogado);

        carregarDadosIniciais();
    }
    
    private void configurarListeners() {
        tab_painelPlaylist.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                carregarDadosDaAbaSelecionada();
            }
        });

        bt_apagarPlaylist.setEnabled(false);  
        bt_confirmarnomePlaylist.setEnabled(false);
        txt_novonomePlaylist.setEnabled(false); 
        bt_removermusicaPlaylist.setEnabled(false);
        
        table_apagarPlaylist.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    bt_apagarPlaylist.setEnabled(table_apagarPlaylist.getSelectedRow() != -1);
                }
            }
        });
        
        table_renamePlaylist.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    boolean playlistSelecionada = table_renamePlaylist.getSelectedRow() != -1;

                    txt_novonomePlaylist.setEnabled(playlistSelecionada);
                    bt_confirmarnomePlaylist.setEnabled(playlistSelecionada);

                    if (playlistSelecionada) {
                        controller.carregarMusicasDaPlaylistSelecionadaParaEdicao();
                        Playlist p = getPlaylistSelecionadaParaEditar();
                        if (p != null) {
                            txt_novonomePlaylist.setText(p.getNomePlaylist());
                        }
                    } else {
                        txt_novonomePlaylist.setText("");
                        exibirMusicasDaPlaylistNaAbaEditar(null);
                    }
                    bt_removermusicaPlaylist.setEnabled(false);
                }
            }
        });
    
        table_musicasPlaylist.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    boolean playlistMasterSelecionada = table_renamePlaylist.getSelectedRow() != -1;
                    boolean musicaDetalheSelecionada = table_musicasPlaylist.getSelectedRow() != -1;
                    bt_removermusicaPlaylist.setEnabled(playlistMasterSelecionada && musicaDetalheSelecionada);
                }
            }
        });
    }
        
        
    /**
     * Creates new form PlaylistFrame
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_spotifeiPlaylist = new javax.swing.JLabel();
        bt_voltarPlaylist = new javax.swing.JButton();
        tab_painelPlaylist = new javax.swing.JTabbedPane();
        jpanel_criarPlaylist = new javax.swing.JPanel();
        txt_nomePlaylist = new javax.swing.JTextField();
        lbl_nomePlaylist = new javax.swing.JLabel();
        bt_criarPlaylist = new javax.swing.JButton();
        jpanel_apagarPlaylist = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_apagarPlaylist = new javax.swing.JTable();
        bt_apagarPlaylist = new javax.swing.JButton();
        jpanel_editarPlaylist = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_musicasPlaylist = new javax.swing.JTable();
        bt_confirmarnomePlaylist = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_novonomePlaylist = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_renamePlaylist = new javax.swing.JTable();
        bt_removermusicaPlaylist = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_spotifeiPlaylist.setBackground(new java.awt.Color(30, 215, 96));
        lbl_spotifeiPlaylist.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbl_spotifeiPlaylist.setForeground(new java.awt.Color(25, 20, 20));
        lbl_spotifeiPlaylist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_spotifeiPlaylist.setText("SPOTIFEI");
        lbl_spotifeiPlaylist.setToolTipText("");

        bt_voltarPlaylist.setBackground(new java.awt.Color(25, 20, 20));
        bt_voltarPlaylist.setForeground(new java.awt.Color(30, 215, 96));
        bt_voltarPlaylist.setText("<-- Voltar");
        bt_voltarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_voltarPlaylistActionPerformed(evt);
            }
        });

        lbl_nomePlaylist.setText("Nome da playlist:");

        bt_criarPlaylist.setBackground(new java.awt.Color(25, 20, 20));
        bt_criarPlaylist.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bt_criarPlaylist.setForeground(new java.awt.Color(30, 215, 96));
        bt_criarPlaylist.setText("Confirmar!");
        bt_criarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_criarPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanel_criarPlaylistLayout = new javax.swing.GroupLayout(jpanel_criarPlaylist);
        jpanel_criarPlaylist.setLayout(jpanel_criarPlaylistLayout);
        jpanel_criarPlaylistLayout.setHorizontalGroup(
            jpanel_criarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_criarPlaylistLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(lbl_nomePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_nomePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(bt_criarPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jpanel_criarPlaylistLayout.setVerticalGroup(
            jpanel_criarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_criarPlaylistLayout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(jpanel_criarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nomePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_nomePlaylist)
                    .addComponent(bt_criarPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(206, Short.MAX_VALUE))
        );

        tab_painelPlaylist.addTab("Criar Playlist", jpanel_criarPlaylist);

        table_apagarPlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_apagarPlaylist);

        bt_apagarPlaylist.setBackground(new java.awt.Color(215, 30, 96));
        bt_apagarPlaylist.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bt_apagarPlaylist.setText("Apagar!");
        bt_apagarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_apagarPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanel_apagarPlaylistLayout = new javax.swing.GroupLayout(jpanel_apagarPlaylist);
        jpanel_apagarPlaylist.setLayout(jpanel_apagarPlaylistLayout);
        jpanel_apagarPlaylistLayout.setHorizontalGroup(
            jpanel_apagarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_apagarPlaylistLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(bt_apagarPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jpanel_apagarPlaylistLayout.setVerticalGroup(
            jpanel_apagarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_apagarPlaylistLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jpanel_apagarPlaylistLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(bt_apagarPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab_painelPlaylist.addTab("Apagar Playlist", jpanel_apagarPlaylist);

        table_musicasPlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(table_musicasPlaylist);

        bt_confirmarnomePlaylist.setBackground(new java.awt.Color(25, 20, 20));
        bt_confirmarnomePlaylist.setForeground(new java.awt.Color(30, 215, 96));
        bt_confirmarnomePlaylist.setText("Confirmar");
        bt_confirmarnomePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_confirmarnomePlaylistActionPerformed(evt);
            }
        });

        jLabel1.setText("Novo nome playlist:");

        table_renamePlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(table_renamePlaylist);

        bt_removermusicaPlaylist.setBackground(new java.awt.Color(215, 30, 96));
        bt_removermusicaPlaylist.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bt_removermusicaPlaylist.setText("Remover Música!");
        bt_removermusicaPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_removermusicaPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanel_editarPlaylistLayout = new javax.swing.GroupLayout(jpanel_editarPlaylist);
        jpanel_editarPlaylist.setLayout(jpanel_editarPlaylistLayout);
        jpanel_editarPlaylistLayout.setHorizontalGroup(
            jpanel_editarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_editarPlaylistLayout.createSequentialGroup()
                .addGroup(jpanel_editarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_editarPlaylistLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanel_editarPlaylistLayout.createSequentialGroup()
                        .addGroup(jpanel_editarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpanel_editarPlaylistLayout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(bt_confirmarnomePlaylist))
                            .addGroup(jpanel_editarPlaylistLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jpanel_editarPlaylistLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(txt_novonomePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_removermusicaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
        jpanel_editarPlaylistLayout.setVerticalGroup(
            jpanel_editarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_editarPlaylistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanel_editarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpanel_editarPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_novonomePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_removermusicaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bt_confirmarnomePlaylist)
                .addGap(22, 22, 22))
        );

        tab_painelPlaylist.addTab("Editar Playlist", jpanel_editarPlaylist);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bt_voltarPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254)
                .addComponent(lbl_spotifeiPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addGap(356, 356, 356))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(tab_painelPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_spotifeiPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_voltarPlaylist))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab_painelPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void bt_voltarPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_voltarPlaylistActionPerformed
        if (this.usuarioLogado != null) {
            MenuFrame mf = new MenuFrame(this.usuarioLogado);
            mf.setVisible(true);
        } else {
            LoginFrame lf = new LoginFrame();
            lf.setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_bt_voltarPlaylistActionPerformed

    private void bt_apagarPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_apagarPlaylistActionPerformed
        if (controller != null) {
            controller.acaoApagarPlaylistSelecionada();
        }
    }//GEN-LAST:event_bt_apagarPlaylistActionPerformed

    private void bt_confirmarnomePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_confirmarnomePlaylistActionPerformed
        if (controller != null) {
            controller.acaoRenomearPlaylistSelecionada();
        }
    }//GEN-LAST:event_bt_confirmarnomePlaylistActionPerformed

    private void bt_removermusicaPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_removermusicaPlaylistActionPerformed
        if (controller != null) {
            controller.acaoRemoverMusicaSelecionadaDaPlaylist();
        }
    }//GEN-LAST:event_bt_removermusicaPlaylistActionPerformed

    private void bt_criarPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_criarPlaylistActionPerformed
        if (controller != null) {
            controller.acaoCriarNovaPlaylist();
        }
    }//GEN-LAST:event_bt_criarPlaylistActionPerformed

    
    private void carregarDadosIniciais() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                carregarDadosDaAbaSelecionada();
            }
        });
    }
    
    private void carregarDadosDaAbaSelecionada() {
        int selectedIndex = tab_painelPlaylist.getSelectedIndex();
        //System.out.println("Aba: " + selectedIndex);

        if (selectedIndex == 0) { //0-> criar playlist//1-> apagar playlis//2-> editar
            txt_nomePlaylist.setText("");
            
        } else if (selectedIndex == 1) {
            controller.carregarPlaylistsParaAbaApagar();
        } else if (selectedIndex == 2) {
            controller.carregarPlaylistsParaAbaEditar();
            exibirMusicasDaPlaylistNaAbaEditar(null);
            txt_novonomePlaylist.setText("");
            txt_novonomePlaylist.setEnabled(false);
            bt_confirmarnomePlaylist.setEnabled(false);
            bt_removermusicaPlaylist.setEnabled(false);
        }
    }
    
    public JTextField getTxt_nomePlaylist() {
        return txt_nomePlaylist;
    }

    public Playlist getPlaylistSelecionadaParaApagar() {
        int linhaSelecionada = table_apagarPlaylist.getSelectedRow();
        if (linhaSelecionada != -1) {
            try {
                int idPlaylist = (Integer) table_apagarPlaylist.getValueAt(linhaSelecionada, 0);
                String nomePlaylist = (String) table_apagarPlaylist.getValueAt(linhaSelecionada, 1);
                return new Playlist(idPlaylist, nomePlaylist, usuarioLogado.getIdUsuario());
            } catch (ClassCastException e) {
                System.err.println("Erro ao converter valor da tabela para Apagar: " + e.getMessage());
                return null;
            }
        }
        return null;
    }
    
    public Playlist getPlaylistSelecionadaParaEditar() {
        int linhaSelecionada = table_renamePlaylist.getSelectedRow();
        if (linhaSelecionada != -1) {
            try {
                int idPlaylist = (Integer) table_renamePlaylist.getValueAt(linhaSelecionada, 0);
                String nomePlaylist = (String) table_renamePlaylist.getValueAt(linhaSelecionada, 1);
                return new Playlist(idPlaylist, nomePlaylist, usuarioLogado.getIdUsuario());
            } catch (ClassCastException e) {
                System.err.println("Erro ao converter valor da tabela para Editar: " + e.getMessage());
                return null;
            }
        }
        return null;
    }
    
    public JTextField getTxt_novonomePlaylist() {
        return txt_novonomePlaylist;
    }

    public Musica getMusicaSelecionadaParaRemover() {
        int linhaSelecionadaNaTabelaMusicas = table_musicasPlaylist.getSelectedRow();
        if (linhaSelecionadaNaTabelaMusicas != -1) {
            try {
                int idMusica = (Integer) table_musicasPlaylist.getValueAt(linhaSelecionadaNaTabelaMusicas, 0);
                String nomeMusica = (String) table_musicasPlaylist.getValueAt(linhaSelecionadaNaTabelaMusicas, 1);
                String autor = (String) table_musicasPlaylist.getValueAt(linhaSelecionadaNaTabelaMusicas, 2);
                String genero = (String) table_musicasPlaylist.getValueAt(linhaSelecionadaNaTabelaMusicas, 3);
                return new Musica(idMusica, nomeMusica, autor, genero);
            } catch (ClassCastException e) {
                System.err.println("Erro ao converter valor da tabela de músicas: " + e.getMessage());
                return null;
            }
        }
        return null;
    }
    
    public void exibirPlaylistsNaTabelaApagar(List<Playlist> playlists) {
        popularTabelaPlaylists(table_apagarPlaylist, playlists);
    }

    public void exibirPlaylistsNaTabelaEditar(List<Playlist> playlists) {
        popularTabelaPlaylists(table_renamePlaylist, playlists);
    }
    
    private void popularTabelaPlaylists(JTable tabela, List<Playlist> playlists) {
        String[] colunas = {"ID Playlist", "Nome da Playlist"};
        DefaultTableModel model = new DefaultTableModel(colunas, 0) {
            @Override public boolean isCellEditable(int row, int column) { return false; }
        };
        if (playlists != null) {
            for (Playlist p : playlists) {
                model.addRow(new Object[]{p.getIdPlaylist(), p.getNomePlaylist()});
            }
        }
        tabela.setModel(model);

        if (tabela.getColumnCount() > 0) {
            javax.swing.table.TableColumn columnID = tabela.getColumnModel().getColumn(0);
            columnID.setMinWidth(0);
            columnID.setMaxWidth(0);
            columnID.setPreferredWidth(0);
            columnID.setResizable(false);
        }
    }
    
    public void exibirMusicasDaPlaylistNaAbaEditar(List<Musica> musicas) {
        String[] colunas = {"ID Música", "Nome", "Autor", "Gênero"};
        DefaultTableModel model = new DefaultTableModel(colunas, 0) {
            @Override public boolean isCellEditable(int row, int column) { return false; }
        };
        if (musicas != null) {
            for (Musica m : musicas) {
                model.addRow(new Object[]{m.getIdMusica(), m.getNomeMusica(), m.getAutorMusica(), m.getGeneroMusica()});
            }
        }
        table_musicasPlaylist.setModel(model);
        if (table_musicasPlaylist.getColumnCount() > 0 && table_musicasPlaylist.getColumnModel().getColumn(0).getHeaderValue().equals("ID Música")) {
            table_musicasPlaylist.removeColumn(table_musicasPlaylist.getColumnModel().getColumn(0));
        }
    }
    
    public void limparCampoNovaPlaylist() {
        txt_nomePlaylist.setText("");
    }


    
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PlaylistFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PlaylistFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PlaylistFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PlaylistFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PlaylistFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_apagarPlaylist;
    private javax.swing.JButton bt_confirmarnomePlaylist;
    private javax.swing.JButton bt_criarPlaylist;
    private javax.swing.JButton bt_removermusicaPlaylist;
    private javax.swing.JButton bt_voltarPlaylist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel jpanel_apagarPlaylist;
    private javax.swing.JPanel jpanel_criarPlaylist;
    private javax.swing.JPanel jpanel_editarPlaylist;
    private javax.swing.JLabel lbl_nomePlaylist;
    private javax.swing.JLabel lbl_spotifeiPlaylist;
    private javax.swing.JTabbedPane tab_painelPlaylist;
    private javax.swing.JTable table_apagarPlaylist;
    private javax.swing.JTable table_musicasPlaylist;
    private javax.swing.JTable table_renamePlaylist;
    private javax.swing.JTextField txt_nomePlaylist;
    private javax.swing.JTextField txt_novonomePlaylist;
    // End of variables declaration//GEN-END:variables
}
